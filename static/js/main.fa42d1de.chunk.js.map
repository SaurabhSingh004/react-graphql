{"version":3,"sources":["components/CountrySelect.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["GET_COUNTRIES","gql","CountrySelect","props","console","log","code","useQuery","variables","data","error","loading","className","continent","countries","map","name","value","GET_CONTINENTS","List","useState","continents","state","setState","onChange","e","target","style","marginTop","height","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","ReactDOM","render","document","getElementById"],"mappings":"2PAIMA,EAAgBC,YAAH,mIAQNC,EAAc,SAACC,GAC3BC,QAAQC,IAAIF,EAAMG,MADkB,MAEHC,YAASP,EAAc,CAACQ,UAAU,CAACF,KAAKH,EAAMG,QAAtEG,EAF2B,EAE3BA,KAAMC,EAFqB,EAErBA,MAEf,OAJoC,EAEfC,QAED,2CAEdD,EAAc,kDAEhB,qBAAKE,UAAU,MAAf,SAECH,EAAKI,UAAUC,UAAUC,KAAI,gBAAGT,EAAH,EAAGA,KAAMU,EAAT,EAASA,KAAT,OAC7B,6BACA,qBAAgBC,MAAOX,EAAvB,UACCA,EADD,IACQU,IADEV,WClBVY,EAAiBjB,YAAH,oFAQPkB,EAAK,WAAK,IAAD,EAEKC,mBAAS,CAClCC,WAAY,OAHQ,mBAEdC,EAFc,KAEPC,EAFO,OAMYhB,YAASW,GAAlCP,EANa,EAMbA,QAASD,EANI,EAMJA,MAAOD,EANH,EAMGA,KAExB,GAAIE,EAAS,OAAO,2CAElB,GAAID,EAAO,OAAO,kDAQnB,OACC,gCAEE,wBACAO,MAAOK,EAAMD,WACbG,SAXoB,SAACC,GAExBF,EAAS,CAAEF,WAAYI,EAAEC,OAAOT,SAU7BU,MAAO,CAAEC,UAAW,OAAQC,OAAQ,OAAQC,SAAU,QAHtD,SAKArB,EAAKY,WAAWN,KAAI,gBAAGT,EAAH,EAAGA,KAAMU,EAAT,EAASA,KAAT,OACpB,yBAAoBC,MAAOX,EAA3B,UACCA,EADD,IACQU,IADMV,QAMf,sDAAyBgB,EAAMD,cAGV,MAAlBC,EAAMD,WAAiB,6BAAM,cAAC,EAAD,CAAef,KAAMgB,EAAMD,iBCvB9CU,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OCVOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCARQ,EAAS,IAAIC,IAAa,CAC/BC,IAAK,wCAENC,IAASC,OACP,cAAC,IAAD,CAAgBJ,OAAQA,EAAxB,SACA,cAAC,EAAD,MAEAK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.fa42d1de.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\"\r\nimport React,{useState} from \"react\"\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport \"../App.css\"\r\nconst GET_COUNTRIES = gql`\r\nquery getCountries($code: ID!) {\r\n continent(code: $code) {\r\n    countries {\r\n      name\r\n    }\r\n  }\r\n}`\r\nexport const CountrySelect=(props)=> {\r\n\tconsole.log(props.code)\r\n\tconst  { data, error,loading } = useQuery(GET_COUNTRIES,{variables:{code:props.code},});\r\n\t\r\n\tif (loading) return <p>Loading...</p>;\r\n\r\n  \tif (error) return <p>An error occured!</p>;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"Box\">\r\n\t\t\t\t\t \r\n\t\t\t\t\t{data.continent.countries.map(({ code, name}) => (\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li  key={code} value={code} >\r\n\t\t\t\t\t\t{code} {name}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\r\n\t\t)\r\n}\r\n","import React,{useState} from \"react\"\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { useLazyQuery } from '@apollo/react-hooks'\r\nimport { gql } from \"apollo-boost\"\r\nimport {CountrySelect} from \"./CountrySelect\"\r\nimport \"../App.css\"\r\nconst GET_CONTINENTS = gql`{ \r\n    continents {\r\n      code,\r\n      name,\r\n    }\r\n  }`\r\n  \r\n\r\nexport const List=()=>{\r\n\t\r\n\tconst [state, setState] = useState({\r\n\t\tcontinents: \"PL\",\r\n\t\t\r\n\t})\r\n\tconst { loading, error, data } = useQuery(GET_CONTINENTS);\r\n\r\n\tif (loading) return <p>Loading...</p>;\r\n\r\n  \tif (error) return <p>An error occured!</p>;\r\n\t// set the selected country to the new input value\r\n\tconst onContinentChange=(e)=> {\r\n\t\r\n\t\tsetState({ continents: e.target.value})\r\n        \r\n\t};\r\n\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t\r\n\t\t\t\t <select\r\n\t\t\t\t\tvalue={state.continents}\r\n\t\t\t\t\tonChange={onContinentChange}\r\n\t\t\t\t\tstyle={{ marginTop: \"30px\", height: \"50px\", fontSize: \"20px\" }}\r\n\t\t\t\t>\r\n\t\t\t\t{data.continents.map(({ code, name }) => (\r\n\t\t\t\t\t<option  key={code} value={code} >\r\n\t\t\t\t\t{code} {name}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t\r\n\t\t\t\t<h3>Continent Selected: {state.continents}\r\n                  </h3>\r\n\t\t\t\t  \r\n\t\t\t\t  {state.continents==\"PL\"?<></>:<CountrySelect code={state.continents} />}\r\n\t\t\t\t  </div>\r\n\t\t)\r\n}\r\n\r\n"," import React from \"react\"\n  import \"./App.css\"\n  \n  import {List} from \"./components/List\"\n  \n  const query = `{ \n    continents {\n      code,\n      name,\n    }\n  }`;\n  const query1 = `\n  query getCountries($code: String) {\n    continent(code: $code) {\n      countries {\n        name\n      }\n    }\n  }`;\n  function App() {\n    return (\n      <div className='App'>\n        <List />\n      </div>\n    )\n  }\n  \n  export default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloClient from \"apollo-boost\"\nimport { ApolloProvider } from \"react-apollo\"\nconst client = new ApolloClient({\n\turi: \"https://countries.trevorblades.com/\"\n})\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <App />\n</ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}